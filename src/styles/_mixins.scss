@use 'sass:map';
@use 'variables' as v;
@use 'functions' as f;

// 반응형 미디어 쿼리
@mixin mq($breakpoint) {
  @if map.has-key(v.$breakpoints, $breakpoint) {
    @media (min-width: map.get(v.$breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// 기본 타이포
@mixin text-style($size, $weight: 400) {
  $scale: map.get(v.$typography, $size);
  @if $scale == null {
    @error "Unknown typography scale: #{$size}";
  }
  font-size: map.get($scale, fontSize);
  line-height: map.get($scale, lineHeight);
  font-weight: $weight;
}

// 확장 타이포 (색상)
@mixin text-style-extended($size, $weight: 400, $color: null) {
  @include text-style($size, $weight);
  @if $color != null {
    color: f.color($color);
  }
}

// flex
@mixin flex-box($justify: center, $align: center, $direction: row) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}
